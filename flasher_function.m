function [flashDia,sf] = flasher_function(x)
    % Seperate out variables M, H, R, dr
    m = x(1);
    h = x(2);
    r = x(3);
    dr = x(4);
    
    % Calculate deployed diameter (non-scaled)
    dia = -30.8007155051572 + 17.5805018082298 * r + 22.955443238665 * h ...
        + 32.3767238379876 * m + 36.0171919039623 * dr + r *(h * 20.24335886789) ...
        + r * (m * -16.7368464219436) + r * (dr * 17.9558831539427) + ...
        h * (m * -21.5485771795354) + h * (dr * -58.6818112411949) + ...
        m * (m * -11.2897970359283) + m * (dr * -22.7057415223007) + ...
        dr * (dr * 60.6485010966791) + r * (h * (m * -9.71125361393107)) + ...
        r * (h * (dr * 71.964726091932)) + r * (m * (m * 5.69891074384654)) + ...
        r * (m * (dr * -24.7331475632805)) + r * (dr * (dr * -7.35018051928018)) + ...
        h * (m * (m * 7.24599552549466)) + h * (m * (dr * 15.4275259899636)) + ...
        m * (m * (m * 1.63557186886912)) + m * (m * (dr * 7.95184629842622)) + ...
        m * (dr * (dr * -21.826469592577)) + r * (h * (m * (m * 1.66641628116529))) + ...
        r * (h * (m * (dr * -18.4322020369448))) + r * (m * (m * (m * -0.82441503707153))) + ...
        r * (m * (m * (dr * 5.96372722015995))) + h * (m * (m * (m * -1.03542446456931))) + ...
        h * (m * (m * (dr * -1.15757120365067))) + m * (m * (m * (m * -0.0844630992590606))) + ...
        m * (m * (m * (dr * -1.31737462330636))) + m * (m * (dr * (dr * 2.05528478486013))) + ...
        r * (h * (m * (m * (m * -0.0957836363013976)))) + r * (h * (m * (m * (dr * 1.32536076565245)))) + ...
        r * (m * (m * (m * (m * 0.0428636049313909)))) + r * (m * (m * (m * (dr * -0.420657654414967)))) + ...
        h * (m * (m * (m * (m * 0.0532269207731286)))) + m * (m * (m * (m * (dr * 0.0796287406622894))));

    % Calculate the folded height
    foldedHeight = (-1.59206916942773) + -0.131061593606994 * r + 47.6213164338163 * h + 1.48900743657903 * m + ...
        (-12.1946624232986) * dr + r * (h * 0.157665052328643) + r * (m * 0.0660654718341852) + ...
        r * (dr * -3.21705579215229) + h * (m * -33.2250828010171) + h * (dr * 16.5736662371763) + ...
        m * (m * -0.508006612030481) + m * (dr * 4.13596256680427) + dr * (dr * -2.86471690562459) + ...
        r * (h * (m * -0.112721857231602)) + r * (h * (dr * 8.38730695844033)) + r * (m * (m * -0.0017048985697696)) + ...
        r * (m * (dr * -0.233013638908865)) + r * (dr * (dr * 5.56370422003153)) + h * (m * (m * 8.85332403595967)) + ...
        h * (m * (dr * -10.7375350026608)) + h * (dr * (dr * -3.64845165160917)) + m * (m * (m * 0.0746926671377578)) + ...
        m * (m * (dr * 0.429171734379731)) + m * (dr * (dr * -0.1382614669637)) + r * (h * (m * (m * 0.0251314288100611))) + ...
        r * (h * (m * (dr * -2.41377904630746))) + r * (h * (dr * (dr * 12.7857926040918))) + r * (m * (m * (m * -0.00271143873346894))) + ...
        r * (m * (m * (dr * 0.327844924688852))) + r * (m * (dr * (dr * -4.96867197945782))) + ...
        h * (m * (m * (m * -1.05230238734605))) + h * (m * (m * (dr * 2.16409799724586))) + h ...
        * (m * (dr * (dr * -2.06973249042365))) + m * (m * (m * (m * -0.00398732693493309))) + ...
        m * (m * (m * (dr * -0.27783027813498))) + m * (m * (dr * (dr * 1.15705952067837))) + ...
        r * (h * (m * (m * (m * -0.00176665476439751)))) + r * (h * (m * (m * (dr * 0.192024095097793)))) + ...
        r * (h * (m * (dr * (dr * -1.9817325582516)))) + r * (m * (m * (m * (m * 0.000287850931701885)))) + ...
        r * (m * (m * (m * (dr * -0.0349042356234638)))) + r * (m * (m * (dr * (dr * 0.639711990713077)))) + ...
        h * (m * (m * (m * (m * 0.0467817223161224)))) + h * (m * (m * (m * (dr * -0.140710773787182)))) + ...
        h * (m * (m * (dr * (dr * 0.412698502589813)))) + m * (m * (m * (m * (dr * 0.0240595610687228)))) + ...
        m * (m * (m * (dr * (dr * -0.164758371557956))));
    
    % Calculate folded diameter
    foldedDia = 10.4413771891685 + 1.001281526313 * r + -0.0350149958483758 * h + -5.44205511718953 * m + ...
        14.0697017937672 * dr + r * (h * 0.512146358774929) + r * (m * -1.05480236810659) + ...
        r * (dr * 30.6007148694839) + h * (m * -0.134787930901553) + h * (dr * -0.616198200371516) + ...
        m * (m * 1.15979485405129) + m * (dr * -17.377606736281) + r * (h * (m * -0.340698595288239)) + ...
        r * (h * (dr * 13.1376750942491)) + r * (m * (m * 0.394073850138408)) + r * (m * (dr * -16.6564582092915)) + ...
        h * (m * (m * 0.0981132235064936)) + h * (m * (dr * -3.2704919631628)) + m * (m * (m * -0.103369130233059)) + ...
        m * (m * (dr * 7.19970505365829)) + r * (h * (m * (m * 0.0717530704942898))) + ...
        r * (h * (m * (dr * -3.19867724904607))) + r * (m * (m * (m * -0.0619300186619094))) + ...
        r * (m * (m * (dr * 3.22877218383847))) + h * (m * (m * (m * -0.0209672148911938))) + ...
        h * (m * (m * (dr * 0.962934158197865))) + m * (m * (m * (m * 0.00307024088945792))) + ...
        m * (m * (m * (dr * -1.21288197046535))) + r * (h * (m * (m * (m * -0.00480881848444579)))) + ...
        r * (h * (m * (m * (dr * 0.259067395848034)))) + r * (m * (m * (m * (m * 0.00346749286187312)))) + ...
        r * (m * (m * (m * (dr * -0.204630565487018)))) + h * (m * (m * (m * (m * 0.0014046800133332)))) + ...
        h * (m * (m * (m * (dr * -0.076014010983752)))) + m * (m * (m * (m * (dr * 0.0712683869323298))));
    
    % Scale to fit box
    
    boxHeight = 12*0.0254; % inch to meters
    boxWidth = 22*0.0254; % inch to meters
    
    boxHeight = 12; % inch
    boxWidth = 22; % inch 
    
    if ((boxHeight / foldedHeight) <= (boxWidth / foldedDia))
        flashDia = dia * (boxHeight / foldedHeight);
        sf = (boxHeight / foldedHeight);
    else
        flashDia = dia * (boxWidth / foldedDia);
        sf = (boxWidth / foldedDia);
    end
end